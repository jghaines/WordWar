'use strict';

var _letterDistribution = [].concat(
   Array.from( { length : 79-2 }, () => 'A' ), // **
   Array.from( { length : 18 }, () => 'B' ),
   Array.from( { length : 41 }, () => 'C' ),
   Array.from( { length : 34-1 }, () => 'D' ), // *
   Array.from( { length : 115-6 }, () => 'E' ), // ******
   Array.from( { length : 12 }, () => 'F' ),
   Array.from( { length : 28-1 }, () => 'G' ), // *
   Array.from( { length : 25 }, () => 'H' ),
   Array.from( { length : 92-4 }, () => 'I' ), // ****
   Array.from( { length : 1 }, () => 'J' ),
   Array.from( { length : 9 }, () => 'K' ),
   Array.from( { length : 53-1 }, () => 'L' ), // *
   Array.from( { length : 29 }, () => 'M' ),
   Array.from( { length : 68-4 }, () => 'N' ), // ****
   Array.from( { length : 67-1 }, () => 'O' ), // *
   Array.from( { length : 30 }, () => 'P' ),
   Array.from( { length : 1-1 }, () => 'Q' ), // +
   Array.from( { length : 71-3 }, () => 'R' ), // ***
   Array.from( { length : 98-3 }, () => 'S' ), // ***
   Array.from( { length : 66-4 }, () => 'T' ), // ****
   Array.from( { length : 33-1 }, () => 'U' ), // +
   Array.from( { length : 9 }, () => 'V' ),
   Array.from( { length : 7 }, () => 'W' ),
   Array.from( { length : 2 }, () => 'X' ),
   Array.from( { length : 16 }, () => 'Y' ),
   Array.from( { length : 4 }, () => 'Z' )
);

var _getLetter = function() {
    return _letterDistribution[ Math.floor(Math.random() * _letterDistribution.length) ];
}


var _tupleDistribution = [ // tuple-parser.js 300 0 // without weighting
   ["Q","U"],
   ["E","S"],
   ["I","N"],
   ["E","R"],
   ["T","I"],
   ["T","E"],
   ["A","T"],
   ["I","S"],
   ["O","N"],
   ["R","E"],
   ["N","G"],
   ["E","D"],
   ["E","N"],
   ["S","T"],
   ["R","I"],
   ["A","L"],
   ["L","I"],
   ["A","N"],
   ["L","E"],
   ["R","A"],
   ["N","E"],
   ["S","E"],
   ["A","R"],
   ["I","C"],
   ["O","R"],
   ["R","O"],
   ["N","T"],
   ["I","T"],
   ["I","E"],
   ["L","A"],
   ["C","O"],
   ["D","E"],
   ["S","S"],
   ["I","O"],
   ["R","S"],
   ["N","S"],
   ["N","I"],
   ["C","A"],
   ["A","S"],
   ["T","A"],
   ["H","E"],
   ["D","I"],
   ["T","O"],
   ["T","R"],
   ["M","E"],
   ["C","H"],
   ["U","N"],
   ["L","O"],
   ["E","L"],
   ["O","L"],
   ["L","L"],
   ["E","T"],
   ["O","U"],
   ["M","A"],
   ["M","I"],
   ["S","I"],
   ["P","E"],
   ["V","E"],
   ["I","L"],
   ["A","C"],
   ["L","Y"],
   ["N","A"],
   ["U","S"],
   ["E","A"],
   ["O","M"],
   ["I","A"],
   ["H","I"],
   ["T","H"],
   ["U","R"],
   ["H","O"],
   ["O","S"],
   ["T","S"],
   ["N","D"],
   ["C","E"],
   ["H","A"],
   ["S","H"],
   ["N","O"],
   ["P","H"],
   ["E","C"],
   ["U","L"],
   ["G","E"],
   ["N","C"],
   ["O","P"],
   ["P","R"],
   ["P","O"],
   ["P","A"],
   ["O","T"],
   ["M","O"],
   ["A","B"],
   ["E","M"],
   ["C","I"],
   ["A","M"],
   ["B","L"],
   ["O","G"],
   ["P","I"],
   ["I","D"],
   ["U","T"],
   ["S","A"],
   ["A","P"],
   ["S","C"],
   ["A","D"],
   ["I","Z"],
   ["C","T"],
   ["B","I"],
   ["G","I"],
   ["B","A"],
   ["O","C"],
   ["S","U"],
   ["O","O"],
   ["B","E"],
   ["C","K"],
   ["E","E"],
   ["K","E"],
   ["A","G"],
   ["S","P"],
   ["S","O"],
   ["U","M"],
   ["I","M"],
   ["C","R"],
   ["R","T"],
   ["B","O"],
   ["G","R"],
   ["E","P"],
   ["S","M"],
   ["I","R"],
   ["F","I"],
   ["A","I"],
   ["G","A"],
   ["I","V"],
   ["Z","E"],
   ["D","O"],
   ["P","L"],
   ["I","G"],
   ["V","I"],
   ["M","P"],
   ["T","U"],
   ["C","U"],
   ["T","T"],
   ["O","D"],
   ["L","U"],
   ["D","A"],
   ["I","P"],
   ["R","U"],
   ["G","S"],
   ["K","I"],
   ["D","S"],
   ["L","S"],
   ["B","R"],
   ["O","V"],
   ["R","M"],
   ["Q","U"],
   ["M","S"],
   ["H","Y"],
   ["W","A"],
   ["R","Y"],
   ["R","D"],
   ["T","Y"],
   ["O","W"],
   ["I","F"],
   ["R","R"],
   ["A","U"],
   ["F","O"],
   ["G","L"],
   ["C","L"],
   ["F","E"],
   ["O","I"],
   ["V","A"],
   ["B","U"],
   ["E","X"],
   ["R","C"],
   ["U","P"],
   ["M","B"],
   ["G","O"],
   ["D","R"],
   ["O","B"],
   ["U","C"],
   ["F","L"],
   ["U","B"],
   ["E","G"],
   ["E","O"],
   ["P","S"],
   ["U","I"],
   ["R","N"],
   ["M","U"],
   ["E","I"],
   ["F","A"],
   ["U","A"],
   ["W","E"],
   ["I","B"],
   ["P","P"],
   ["F","U"],
   ["E","F"],
   ["W","I"],
   ["N","N"],
   ["P","U"],
   ["K","S"],
   ["P","T"],
   ["M","M"],
   ["W","O"],
   ["L","T"],
   ["G","U"],
   ["S","L"],
   ["O","A"],
   ["U","E"],
   ["Y","S"],
   ["A","V"],
   ["F","F"],
   ["E","V"],
   ["D","U"],
   ["G","H"],
   ["H","R"],
   ["R","B"],
   ["R","G"],
   ["T","L"],
   ["U","D"],
   ["R","P"],
   ["E","U"],
   ["A","K"],
   ["E","B"],
   ["Y","P"],
   ["Z","I"],
   ["A","Y"],
   ["N","U"],
   ["F","R"],
   ["A","E"],
   ["D","L"],
   ["Y","L"],
   ["S","N"],
   ["E","W"],
   ["G","G"],
   ["H","U"],
   ["S","Y"],
   ["N","F"],
   ["R","L"],
   ["U","G"],
   ["G","N"],
   ["N","K"],
   ["O","E"],
   ["L","D"],
   ["V","O"],
   ["C","Y"],
   ["H","T"],
   ["R","K"],
   ["Z","A"],
   ["K","A"],
   ["A","W"],
   ["S","K"],
   ["D","D"],
   ["A","F"],
   ["T","C"],
   ["C","C"],
   ["B","B"],
   ["O","K"],
   ["I","K"],
   ["Y","M"],
   ["E","Y"],
   ["X","I"],
   ["H","S"],
   ["Y","T"],
   ["Y","E"],
   ["Y","N"],
   ["O","F"],
   ["Y","C"],
   ["Y","I"],
   ["W","H"],
   ["S","W"],
   ["O","X"],
   ["B","S"],
   ["C","S"],
   ["M","Y"],
   ["Y","A"],
   ["G","Y"],
   ["Z","O"],
   ["I","U"],
   ["R","H"],
   ["A","Z"],
   ["X","E"],
   ["R","F"],
   ["R","V"],
   ["H","L"],
   ["Y","R"],
   ["F","T"],
   ["D","Y"],
   ["P","Y"],
   ["J","A"],
   ["N","V"],
   ["N","Y"],
   ["K","L"],
   ["A","H"],
   ["Y","O"],
   ["J","U"],
   ["E","H"],
   ["T","W"],
   ["N","L"],
   ["D","G"],
   ["D","N"],
   ["W","N"],
   ["O","Y"],
   ["L","M"],
   ["W","S"],
   ["A","X"]
];

var _getTuple = function( tupleBagSize ) {
    if ( ! tupleBagSize ||  tupleBagSize > _tupleDistribution.length || tupleBagSize <= 0 ) {
        tupleBagSize = _tupleDistribution.length;
    }
    
    return _tupleDistribution[ Math.floor( Math.random() * tupleBagSize ) ];
}

// return a string of letters
// @letterCount - length of string to return
// @validityChecker - function that checks whether letter string is valid
var getLetters = function( letterCount, tupleCount, tupleBagCount, validityChecker ) {
    var letters;    
    do {
        letters = [];
        for (var i = tupleCount; i > 0; --i ) {
            letters = letters.concat( _getTuple( tupleBagCount ) );            
        }
        for (var i = letters.length; i < letterCount; i++) {
            letters.push( _getLetter() );
        }
        
    } while ( validityChecker !== undefined && ! validityChecker( letters ));
    return letters.join('');
}

var _vowelCount = function( letters ) {
    var vowels = 'AEIOU';
    var vowelCount = 0;
    letters.forEach( function( letter ) {
        if ( vowels.indexOf( letter ) >= 0 ) {
            ++vowelCount;
        }
    });

    return vowelCount;
}

var vowelCountChecker = function( letters, minVowels, maxVowels ) {
	var vowelCount = _vowelCount( letters );
	return ( vowelCount >= minVowels && vowelCount <= maxVowels );
}



module.exports = {
    vowelCountChecker : vowelCountChecker,
    letterGenerator : getLetters
}